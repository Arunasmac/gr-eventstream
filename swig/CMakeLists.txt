FIND_PACKAGE(SWIG)
FIND_PACKAGE(PythonLibs)
IF(NOT SWIG_FOUND OR NOT PYTHONLIBS_FOUND)
    RETURN()
ENDIF()
INCLUDE(GrSwig)
INCLUDE(GrPython)

include_directories(
    ${EVENTSTREAM_INCLUDE_DIRS}
    ${GNURADIO_PMT_INCLUDE_DIRS}
    ${GNURADIO_RUNTIME_INCLUDE_DIRS}
    ${GNURADIO_BLOCKS_INCLUDE_DIRS}
    ${PYTHON_INCLUDE_DIRS}
)

LIST(APPEND GR_SWIG_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/include)
FOREACH(incdir ${GNURADIO_RUNTIME_INCLUDE_DIRS})
    LIST(APPEND GR_SWIG_INCLUDE_DIRS ${incdir})
    LIST(APPEND GR_SWIG_INCLUDE_DIRS ${incdir}/gnuradio/swig)
ENDFOREACH(incdir)
FOREACH(incdir ${PMT_INCLUDE_DIRS})
    LIST(APPEND GR_SWIG_INCLUDE_DIRS ${incdir})
    LIST(APPEND GR_SWIG_INCLUDE_DIRS ${incdir}/pmt)
    LIST(APPEND GR_SWIG_INCLUDE_DIRS ${incdir}/pmt/swig)
ENDFOREACH(incdir)
LIST(APPEND GR_SWIG_INCLUDE_DIRS ${EVENTSTREAM_INCLUDE_DIRS})

LIST(APPEND GR_SWIG_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/include/es)

link_directories(${EVENTSTREAM_LIBRARY_DIRS})
set(GR_SWIG_LIBRARIES eventstream ${LOG4CPP_LIBRARIES})

GR_SWIG_MAKE(es_swig es_swig.i)

GR_SWIG_INSTALL(
    TARGETS es_swig
    DESTINATION ${GR_PYTHON_DIR}/es/
    COMPONENT "es_python"
)


GR_PYTHON_INSTALL(
    FILES __init__.py
    DESTINATION ${GR_PYTHON_DIR}/es/
    COMPONENT "es_python"
)

install(
    DIRECTORY ${CMAKE_SOURCE_DIR}/swig/
    DESTINATION include/es/swig COMPONENT "eventstream_devel"
    FILES_MATCHING 
    PATTERN "*.i" 
)


